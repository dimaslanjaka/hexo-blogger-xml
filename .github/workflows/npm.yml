name: Build master branch

on:
  push:
    branches: [compiler]
  pull_request:
    branches: [compiler]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: "14.x"
      - name: Get npm cache directory
        id: npm-cache-dir
        run: echo "::set-output name=dir::$(npm config get cache)"
      - name: Cache NPM dependencies
        id: npm-cache # use this to check for `cache-hit` ==> if: steps.npm-cache.outputs.cache-hit != 'true'
        uses: actions/cache@v2
        with:
          path: |
            ${{ steps.npm-cache-dir.outputs.dir }}
            ./node_modules
            ./dist
            ~/.npm
          key: |
            ${{ runner.os }}-nodejs-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nodejs-
      - name: Build
        run: |
          npm i -g typescript npm gulp-cli
          npm install
          tsc -p tsconfig.json
          cp -rfi ./*.{json,js} ./build/
          #cat ./README.md ./CHANGELOG.md > ./build/readme.md
          cat ./README.md <(echo) ./CHANGELOG.md > ./build/readme.md
          cp -rfi ./src ./build/src
          cp -rfi ./gulpfile.ts ./build/gulpfile.ts
          cp -rfi ./img ./build/img
          cp -rfi ./toBuild/.gitignore ./build/.gitignore
          npx gulp
      - name: Test build package using npm
        run: cd build && npm install
      #- name: Test hexo demo (./build/demo)
      #run: cd build/demo && npm install && npx hexo generate
      - name: Deploy ðŸš€
        uses: JamesIves/github-pages-deploy-action@4.1.4
        with:
          branch: master # The branch the action should deploy to.
          folder: build # The folder the action should deploy.
